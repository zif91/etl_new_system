version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: advertising_analytics
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  etl-app:
    build: 
      context: .
      dockerfile: ${DOCKERFILE:-Dockerfile}
    environment:
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-password}@postgres:5432/advertising_analytics
      - REDIS_URL=redis://redis:6379
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql://postgres:${POSTGRES_PASSWORD:-password}@postgres:5432/advertising_analytics
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=redis://redis:6379/0
      - META_APP_ID=${META_APP_ID}
      - META_APP_SECRET=${META_APP_SECRET}
      - GA4_PROPERTY_ID=${GA4_PROPERTY_ID}
      - GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}
      - GOOGLE_ADS_CUSTOMER_ID=${GOOGLE_ADS_CUSTOMER_ID}
      - APPSFLYER_API_TOKEN=${APPSFLYER_API_TOKEN}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ${GOOGLE_CREDENTIALS_PATH:-./credentials.json}:/app/credentials.json
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - etl-app
    restart: unless-stopped

volumes:
  postgres_data:
